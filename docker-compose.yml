version: '3.8'

services:
  es_microservice:
    container_name: es_service
    build:
      context: .
      dockerfile: es.Dockerfile
    volumes:
      - ./:/app
    ports:
      - "3000:3000"
    depends_on:
     - postgres
     - pgadmin
    networks: [ "microservices" ]
    restart: always
    environment:
      - POSTGRES_URL=postgres://postgres:changeme@postgres_container:5432/postgres?sslmode=disable
      - PORT=3000
      - ENV=prod
      - RABBITMQ_URL=amqp://guest:guest@message-broker:5672/
      - MQ_CONFIG_FILE=pkg/config/mq_config.json

  postgres:
    container_name: postgres_container
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
    volumes:
       - postgres:/data/postgres
       - ./migration:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - microservices
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - microservices
    restart: unless-stopped

  # Create service with RabbitMQ.
  message-broker:
    image: rabbitmq:3-management-alpine
    container_name: message-broker
    ports:
      - 5672:5672   # for sender and consumer connections
      - 15672:15672 # for serve RabbitMQ GUI
    volumes:
      - ${HOME}/dev-rabbitmq/data/:/var/lib/rabbitmq
      - ${HOME}/dev-rabbitmq/log/:/var/log/rabbitmq
    restart: always
    networks:
      - microservices

networks:
  microservices:
    name: microservices

volumes:
    postgres:
    pgadmin: